/*----- constants -----*/
const words = ['Quidditch', 'Hogwarts', 'Hufflepuff', 'Gryffindor', 'Wand', 'Ravenclaw', 'Slytherin', 'Dumbledore', 'Muggle', 'Snape', 'Voldamort', 'Patronus', 'Sectumsempra', 'Hagrid', 'Harry'];
const maxWrong = 8;


/*----- state variables -----*/
let wrongLetters;
let correctLetters;
let lives;
let win;
let guesses;
let word;


/*----- cached elements  -----*/
const livesElement = document.getElementById('lives'); 
const letterButtons = document.querySelectorAll('#letters button');
const wordContainer = document.getElementById('word');


/*----- event listeners -----*/
document.addEventListener('DOMContentLoaded', function() {
const newGameButton = document.getElementById('replay-button');
newGameButton.addEventListener('click', startNewGame);

letterButtons.forEach(function(button) {
 button.addEventListener('click', function() {
  //get the letter the player clicked on
  const letter = button.textContent;
  if (word.includes(letter)) {
    // update the display word
    revealLetter(letter);
  } else {
    //decrease the number of remaining guesses 
    incorrectGuesses();
    }
   });
 });

// Initialize the Game
init();
});
/*----- functions -----*/

function startNewGame() {
// reset game state   
guesses = [];
wrongLetters = [];
lives =  maxWrong;
win = null

// clear the displayed word
const letterSpans = wordContainer.querySelectorAll('span');
letterSpans.forEach(function(span) {
  span.textContent = '_';
  span.classList.remove('revealed');
});

// reset hangman image 
renderImage();

// start new game 
init();
}

// reveal a letter in the word 
function revealLetter(letter) {
// find all the spans representing letters in the word container
const letterSpans = document.querySelectorAll('span');
letterSpans.forEach(function(span) {
  if (span.textContent === letter.toUpperCase()) {
    span.classList.add('revealed');
  }
});
checkWin();
}


function incorrectGuesses() {
livesElement.textContent = parseInt(livesElement.textContent) -1;
//check if the player has lost 
if (parseInt(livesElement.textContent) === 0) {
  // end the game if player hass no lives left 
  endGame('You lost! The word was ${word}.');
}
}

// render the game 
function generateLetterButtons() {
letterButtonsContainer.innerHTML = ''; //clearing any existing content 
// generate a new set of letter buttons 
const letters = 'abcdefghijklmnopqrstuvwxyz';
for (let i = 0; i < letters.length; i++) {
const buttons = document.createElement('button');
buttons.textContent = letters.charAt(i);
buttons.addEventListener('click', function() {
  // when the letter button is clicked, revel the letter in the word
  revealLetter(letters.charAt(i));
  //remove the letter button 
  this.parentElement.removeChild(this);
  //check if the player has won
  if (!document.querySelector('span:empty')) {
    const letterSpans = document.querySelectorAll('#letter-container span');
    const guessedWord = Array.from(letterSpans).map(span => span.dataset.letter).join('');
    if (guessedWord.toLowerCase() === word.toLowerCase()) {
      //player has won
      endGame('Congratulations! You won!');
    }
  }
});
letterButtonsContainer.appendChild(button);
}
}
function displayWord(word) {
    wordContainer.innerHTML = ''; // clearing any existing content 
    //iterate over each letter in the word
    for (let i = 0; i < word.length; i++) {
        const letterSpan = document.createElement('span');
        letterSpan.textContent = '_'; 
        letterSpan.dataset.letter = word.charAt(i).toUpperCase();
        wordContainer.appendChild(letterSpan);
    }
}
function endGame(message) {
alert(message);
}

function renderWord() {
  const letterSpans = document.querySelectorAll('#word span');
  letterSpans.forEach(function(span) {
    if (correctLetters.includes(span.dataset.letter)) {
      span.classList.add('revealed');
    } else {
      span.classList.remove('revealed');
    }
  });
}

function renderLetterButtons() {
if (win === true) {
  // Display a win message
  // You can customize this part based on your preference
  alert('Congratulations! You won!');
} else if (win === false && lives === 0) {
  // Display a loss message
  // You can customize this part based on your preference
  alert(`You lost! The word was ${word}.`);
}
}

function renderMessage() {
letterButtons.forEach(function(button) {
  if (guesses.includes(button.textContent.toLowerCase())) {
    button.setAttribute('disabled', true);
  } else {
    button.removeAttribute('disabled');
  }
});
}

function renderImage() {
const hangmanImage = document.getElementById('hangman-image');
const imageIndex = maxWrong - lives;
hangmanImage.src = `https://i.imgur.com/1ys7mEZ.png`;
}

function render() {
renderWord();
renderLetterButtons();
renderMessage();
renderImage();
}
